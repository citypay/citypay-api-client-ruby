=begin
#CityPay Payment API

# This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 

Contact: support@citypay.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for CityPayApiClient::BatchProcessingApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BatchProcessingApi' do
  before do
    # run before each test
    @api_instance = CityPayApiClient::BatchProcessingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BatchProcessingApi' do
    it 'should create an instance of BatchProcessingApi' do
      expect(@api_instance).to be_instance_of(CityPayApiClient::BatchProcessingApi)
    end
  end

  # unit tests for batch_process_request
  # Batch Process Request
  # A batch process request is used to start the batch process workflow by uploading batch data and initialising a new batch for processing. Once validated the batch will be queued for processing and further updates can be received by a subsequent call to retrieve the batch status. 
  # @param process_batch_request 
  # @param [Hash] opts the optional parameters
  # @return [ProcessBatchResponse]
  describe 'batch_process_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_report_request
  # BatchReportRequest
  # The operation is used to retrieve a report of the result of a batch process.
  # @param batch_report_request 
  # @param [Hash] opts the optional parameters
  # @return [BatchReportResponseModel]
  describe 'batch_report_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for check_batch_status_request
  # CheckBatchStatus
  # The operation is used to retrieve the status of a batch process.
  # @param check_batch_status 
  # @param [Hash] opts the optional parameters
  # @return [CheckBatchStatusResponse]
  describe 'check_batch_status_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
